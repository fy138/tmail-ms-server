package msproto;

// SMTP response for smtpd hooks
message SmtpResponse {
	required uint32 code = 1; 			// SMTP code (ignored if eq 0)
	required string msg = 2; 			// SMTP message (ignored if eq "")

	//optional bool close_connection = 16;	// if true connection is closed
	//optional string data_link = 17; 		// link for downloading additional (large) data
	//repeated string extra_headers = 18; 	// headers to add
}


// Hook SMTPd NewÂ client
// SmtpdNewClientQuery
message SmtpdNewClientQuery {
	required string session_id = 1; // smtpd session ID
	required string remote_ip = 2; 	// remote (client) IP
}

// SmtpdNewClientResponse
message SmtpdNewClientResponse {
	required string session_id = 1;
	optional SmtpResponse smtp_response = 2;
	optional bool drop_connection = 3;
}

// Hook smtpd RCPT TO command
// smtpdRcptToQuery
message SmtpdRcptToQuery {
	required string session_id = 1;
	required string rcptto = 2;
}

// SmtpdRcpttoAccessIsGrantedResponse
message SmtpdRcptToResponse {
	required string session_id = 1;
	optional SmtpResponse smtp_response = 2;
	optional bool drop_connection = 3;
	optional bool relay_granted = 4;
}

// Hook smtpd DATA
// smtpdDataMsg
message SmtpdDataQuery {
	required string session_id = 1;
	required string data_link = 2;
}

// smtpdDataMsg
message SmtpdDataResponse {
	required string session_id = 1;
	optional SmtpResponse smtp_response = 2;
	optional string data_link = 3;
	optional bool drop_connection = 4;
	repeated string extra_headers = 5;
}


// deliverd
// Get routes query
message DeliverdGetRoutesQuery {
	required string deliverd_id = 1;
	required string mailfrom = 2;
	required string rcptto =  3;
	optional string authentified_user = 4;
}

// get routes response
message DeliverdGetRoutesResponse {
	message Route {
		required string remote_host = 1;
		required int64 remote_port = 2;
		optional string local_ip = 3;
		optional int32 priority = 4;
		optional string smtpauth_login = 5;
		optional string smtpauth_password = 6;
	}
	required string deliverd_id = 1;
	repeated Route routes = 2;
}
